'''
1. 지정된 방향대로 변하는 지점 추적 
2. 이동하면서 방문한 지점 저장  
    - 방문 여부 어떻게 확인?: 방문 여부를 확인할 필요가 없음. dfs/bfs 문제가 아님. 목적지를 향해서 경로를 찾는 게 아니라, 애초에 경로가 정해져있음. 
        - 길은 두 개의 점으로 이뤄짐 
        - 길의 이동 방향 상관 없음(왼쪽->오른쪽 방문했었다면, 오른쪽->왼쪽 방문해도 같은 길 중복 방문임)
    - 방문 지점은 어떻게 저장?: 방문한 길을 삽입하기. 이동하는 양쪽 점을 모두 표기해야 함(a->b로 이동했다면 (a, b)와 (b, a) 모두 삽입하기 
3. 모든 이동 완료 후, 저장한 방문 지점의 중복을 제거하고 남은 수를 카운트하기 
'''
def solution(dirs):
    # 이동 방향
    # {'명령어': [세로 이동 칸 수, 가로 이동 칸 수]}
    command = {
        'U': [-1, 0], 
        'D': [1, 0], 
        'R': [0, 1], 
        'L': [0, -1]
    }
    
    visited = []
    cr, cc = 5, 5 # 현재지점. 시작지점으로 초기화 
    
    # 이동 
    for d in dirs:
        cur_d = command[d]
        nr = cr + cur_d[0]
        nc = cc + cur_d[1]
        
        # 조건: 전체 범위을 벗어나지 않아야 
        if 0 <= nr < 11 and 0 <= nc < 11:
            # 방문 지점 저장
            visited.append((cr, cc, nr, nc)) # (현재세로, 현재가로, 다음세로, 다음가로)    
            visited.append((nr, nc, cr, cc)) # (다음세로, 다음가로, 현재세로, 현재가로)
            # 현재지점 갱신 
            cr, cc = nr, nc
        
    return len(set(visited)) // 2